Exercise 1 — Tasks

Find the title of each film ✓
SELECT Title FROM movies;

Find the director of each film ✓
SELECT Director FROM movies;

Find the title and director of each film ✓
SELECT Title,Director FROM movies;

Find the title and year of each film ✓
SELECT Title,Year FROM movies;

Find all the information about each film ✓


Exercise 2 — Tasks

Find the movie with a row id of 6 ✓
SELECT * FROM movies where id=6

Find the movies released in the years between 2000 and 2010 ✓
SELECT * FROM movies where year between 2000 and 2010

Find the movies not released in the years between 2000 and 2010 ✓
SELECT * FROM movies where year not between  2000 and 2010

Find the first 5 Pixar movies and their release year ✓
SELECT * FROM movies limit 5

Exercise 3 — Tasks

Find all the Toy Story movies ✓
SELECT * FROM movies where Title like '%Toy Story%';

Find all the movies directed by John Lasseter ✓
SELECT * FROM movies where Director like '%John Lasseter%';

Find all the movies (and director) not directed by John Lasseter ✓
SELECT * FROM movies where Director not like '%John Lasseter%';

Find all the WALL-* movies ✓
SELECT * FROM movies where Title  like '%WALL-%';

Exercise 4 — Tasks

List all directors of Pixar movies (alphabetically), without duplicates ✓
SELECT distinct(Director) FROM movies order by Director asc;

List the last four Pixar movies released (ordered from most recent to least) ✓
SELECT * FROM movies  order by year desc limit 4;

List the first five Pixar movies sorted alphabetically ✓
SELECT * FROM movies  order by Title asc limit 5;

List the next five Pixar movies sorted alphabetically ✓
SELECT * FROM movies  order by Title asc limit 5 offset 5;

Review 1 — Tasks

List all the Canadian cities and their populations ✓
SELECT *  FROM north_american_cities where country='Canada';

Order all the cities in the United States by their latitude from north to south ✓
SELECT *  FROM north_american_cities where country='United States' order by Latitude desc;

List all the cities west of Chicago, ordered from west to east ✓
SELECT City FROM north_american_cities where  Longitude < -87.629798  order by Longitude;

List the two largest cities in Mexico (by population) ✓
SELECT * FROM north_american_cities where country="Mexico" order by population desc limit 2;

List the third and fourth largest cities (by population) in the United States and their population ✓
SELECT * FROM north_american_cities where country="United States" order by population desc limit 2 offset 2;

Exercise 6 — Tasks

Find the domestic and international sales for each movie ✓
SELECT Title,Domestic_sales,International_sales FROM movies join Boxoffice on id=Movie_id;

Show the sales numbers for each movie that did better internationally rather than domestically ✓
SELECT Title,Domestic_sales,International_sales FROM movies join Boxoffice on id=Movie_id where International_sales>Domestic_sales;

List all the movies by their ratings in descending order ✓
SELECT Title,Rating FROM movies join Boxoffice on id=Movie_id order by rating desc

Exercise 7 — Tasks

Find the list of all buildings that have employees ✓
SELECT distinct(Building) FROM Employees 

Find the list of all buildings and their capacity ✓
SELECT Building_name,capacity FROM Buildings  

List all buildings and the distinct employee roles in each building (including empty buildings) ✓
SELECT DISTINCT building_name, role FROM buildings
LEFT JOIN employees ON building_name = employees.building;

Exercise 8 — Tasks

Find the name and role of all employees who have not been assigned to a building ✓
SELECT Name,Role FROM employees where Building is NULL;

Find the names of the buildings that hold no employees ✓
SELECT distinct building_name FROM buildings left join employees  on Building_name=employees.Building where Building IS NULL;

Exercise 9 — Tasks

List all movies and their combined sales in millions of dollars ✓
SELECT Title,(Domestic_sales+International_sales)/1000000 FROM movies join  Boxoffice on Id=Movie_id;

List all movies and their ratings in percent ✓
SELECT Title,Rating*10 FROM movies join  Boxoffice on Id=Movie_id;

List all movies that were released on even number years ✓
SELECT Title FROM movies join  Boxoffice on Id=Movie_id where year%2=0;

Exercise 10 — Tasks

Find the longest time that an employee has been at the studio ✓
SELECT MAX(Years_employed) FROM employees;

For each role, find the average number of years employed by employees in that role ✓
SELECT Role,AVG(Years_employed) FROM employees group by role;

Find the total number of employee years worked in each building ✓
SELECT building,sum(Years_employed) FROM employees group by building;


Exercise 11 — Tasks

Find the number of Artists in the studio (without a HAVING clause) ✓
SELECT Role,count(*) FROM employees where Role="Artist" ;

Find the number of Employees of each role in the studio ✓
SELECT Role,count(Role) FROM employees group by role ;

Find the total number of years employed by all Engineers ✓
SELECT sum(years_employed) FROM employees where role="Engineer" ;

Exercise 12 — Tasks

Find the number of movies each director has directed ✓
SELECT Director,count(Title) FROM movies group by Director ;

Find the total domestic and international sales that can be attributed to each director ✓
SELECT Director,sum(Domestic_sales+International_sales) as Total_Sales FROM movies join Boxoffice on id=movie_id group by Director ;


Exercise 13 — Tasks 

Add the studio's new production, Toy Story 4 to the list of movies (you can use any director) ✓ 
Insert into movies values (15,"Toy Story 4","Dan Scanlon",2016,120);

Toy Story 4 has been released to critical acclaim! It had a rating of 8.7, and made 340 million domestically and 270 million internationally. Add the record to the BoxOffice table. ✓
insert into boxoffice values (15,8.7,340000000,270000000);

Exercise 14 — Tasks 

The director for A Bug's Life is incorrect, it was actually directed by John Lasseter ✓ 
update movies set Director='John Lasseter' where Title="A Bug's Life";

The year that Toy Story 2 was released is incorrect, it was actually released in 1999 ✓ 
update movies set Year='1999' where Title="Toy Story 2";

Both the title and director for Toy Story 8 is incorrect! The title should be "Toy Story 3" and it was directed by Lee Unkrich ✓ 
update movies set Director='Lee Unkrich',title='Toy Story 3' where Title="Toy Story 8";

Exercise 15 — Tasks 

This database is getting too big, lets remove all movies that were released before 2005. ✓
Delete FROM movies where year < 2005;

Andrew Stanton has also left the studio, so please remove all movies directed by him. ✓
Delete FROM movies where director='Andrew Stanton';

Exercise 16 — Tasks 

Create a new table named Database with the following columns:

– Name A string (text) describing the name of the database
– Version A number (floating point) of the latest version of this database
– Download_count An integer count of the number of times this database was downloaded

This table has no constraints. ✓

Create table Database (Name Text,Version Float,Download_count int);

Exercise 17 — Tasks 

Add a column named Aspect_ratio with a FLOAT data type to store the aspect-ratio each movie was released in. ✓
Alter table movies add Aspect_ratio Float;

Add another column named Language with a TEXT data type to store the language that the movie was released in. Ensure that the default for this language is English. ✓
Alter table movies add Language TEXT Default English;

Exercise 18 — Tasks 

1.We've sadly reached the end of our lessons, lets clean up by removing the Movies table ✓
Drop FROM movies;

2.And drop the BoxOffice table as well ✓ 
Delete table BoxOffice;

